<<<<<<< HEAD
[{"/home/alexandr/to-do-list/alexandr-testwork/src/index.js":"1","/home/alexandr/to-do-list/alexandr-testwork/src/App.js":"2","/home/alexandr/to-do-list/alexandr-testwork/src/redux/store.js":"3","/home/alexandr/to-do-list/alexandr-testwork/src/redux/reducers/reducer.js":"4","/home/alexandr/to-do-list/alexandr-testwork/src/redux/actions.js":"5","/home/alexandr/to-do-list/alexandr-testwork/src/redux/types.js":"6","/home/alexandr/to-do-list/alexandr-testwork/src/api/api.js":"7","/home/alexandr/to-do-list/alexandr-testwork/src/hooks/ListHook.js":"8","/home/alexandr/to-do-list/alexandr-testwork/src/redux/selectors/selectors.js":"9","/home/alexandr/to-do-list/alexandr-testwork/src/components/Icon/icon.js":"10","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskItem/TaskItem.js":"11","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskItem/taskButton.js":"12","/home/alexandr/to-do-list/alexandr-testwork/src/utils/links.js":"13","/home/alexandr/to-do-list/alexandr-testwork/src/pages/Main/Main.js":"14","/home/alexandr/to-do-list/alexandr-testwork/src/pages/CompletedTasks/CompletedTasks.js":"15","/home/alexandr/to-do-list/alexandr-testwork/src/utils/routes.js":"16","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskInput/TaskInput.js":"17","/home/alexandr/to-do-list/alexandr-testwork/src/components/List/List.js":"18"},{"size":355,"mtime":1620742833837,"results":"19","hashOfConfig":"20"},{"size":1431,"mtime":1621260159448,"results":"21","hashOfConfig":"20"},{"size":201,"mtime":1620719960617,"results":"22","hashOfConfig":"20"},{"size":3844,"mtime":1621251116013,"results":"23","hashOfConfig":"20"},{"size":2743,"mtime":1621247428047,"results":"24","hashOfConfig":"20"},{"size":219,"mtime":1620713614992,"results":"25","hashOfConfig":"20"},{"size":1322,"mtime":1621244681812,"results":"26","hashOfConfig":"20"},{"size":826,"mtime":1621255852188,"results":"27","hashOfConfig":"20"},{"size":514,"mtime":1621255925329,"results":"28","hashOfConfig":"20"},{"size":268,"mtime":1620991416388,"results":"29","hashOfConfig":"20"},{"size":4025,"mtime":1621257952546,"results":"30","hashOfConfig":"20"},{"size":291,"mtime":1621258040691,"results":"31","hashOfConfig":"20"},{"size":238,"mtime":1620985646479,"results":"32","hashOfConfig":"20"},{"size":1984,"mtime":1621257583647,"results":"33","hashOfConfig":"20"},{"size":1339,"mtime":1621254467223,"results":"34","hashOfConfig":"20"},{"size":363,"mtime":1620986471130,"results":"35","hashOfConfig":"20"},{"size":3355,"mtime":1621247921559,"results":"36","hashOfConfig":"20"},{"size":714,"mtime":1621254459939,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1jh66eh",{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"41"},"/home/alexandr/to-do-list/alexandr-testwork/src/index.js",["84"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n",["85","86"],"/home/alexandr/to-do-list/alexandr-testwork/src/App.js",["87","88","89"],"/home/alexandr/to-do-list/alexandr-testwork/src/redux/store.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/redux/reducers/reducer.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/redux/actions.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/redux/types.js",[],["90","91"],"/home/alexandr/to-do-list/alexandr-testwork/src/api/api.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/hooks/ListHook.js",["92","93","94"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTasksFromState, getCategoriesFromState, getIsFetching } from '../redux/selectors/selectors';\nimport { getDefaultCategory, getCategories } from '../redux/actions';\n\nconst ListHook = () => {\n    //debugger\n    const dispatch = useDispatch();\n    const tasks = useSelector(getTasksFromState);\n    const unDoneTasks = useSelector(getTasksFromState);\n    const categories = useSelector(getCategoriesFromState);\n    const isFetching = useSelector(getIsFetching);\n\n    useEffect(() => {\n        dispatch(getCategories());\n        dispatch(getDefaultCategory());\n    }, [])\n\n    return {\n        tasks,\n        unDoneTasks,\n        categories,\n        isFetching,\n        dispatch\n    }\n}\n\nexport default ListHook;","/home/alexandr/to-do-list/alexandr-testwork/src/redux/selectors/selectors.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/components/Icon/icon.js",["95","96"],"import React from 'react';\n\nconst color = \"yellowgreen\" | \"yellow\" | \"black\" | \"\" ;\nconst icon = \"anchor\" | \"home\" | \"thumb_up\" | \"\" ;\n\nexport const Icon = ({ icon, color }) => {\n    return <span className='material-icons' style={{color}}>\n        {icon}\n    </span>\n}","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskItem/TaskItem.js",["97","98","99"],"import React from \"react\";\nimport { Grid, Paper, Button, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete, Build, Star } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions,\n         deleteTask,\n         updateTask\n} from \"../../redux/actions\";\nimport { getChangedTaskText } from '../../redux/selectors/selectors';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { StyledButton } from './taskButton';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nconst styles = {\n    Icon: {\n      marginLeft: \"auto\"\n    },\n    Paper: {\n      margin: \"auto\",\n      padding: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: 10,\n      width: 500\n    }\n  };\n\n\nconst TaskItem = ({ task, categories, isListDone }) => {\n\n\n  const dispatch = useDispatch();\n\n  const changedTaskText = useSelector(getChangedTaskText);\n\n  const updateTextParams = {\n    title: changedTaskText,\n    id: task.id\n  }\n\n    const editHandleEnter = (event) => {\n    if (event.key === 'Enter') {\n      dispatch(updateTask({\n        isFavorite: task.isFavorite,\n        id: task.id,\n        isDone: task.isDone,\n        title: changedTaskText,\n        isListDone: isListDone\n      }))\n      dispatch(actions.editTaskText(updateTextParams));\n    }\n  }\n\n  const updateTaskFavorite = () => {\n    dispatch(updateTask({\n      isFavorite: !task.isFavorite,\n      id: task.id,\n      isDone: task.isDone,\n      title: task.title,\n      isListDone: isListDone\n    }))\n    dispatch(actions.changeFavoriteStatus(task.id))\n  }\n\n  const inputTextChanger = event => {\n    const { value } = event.target;\n    const text = value;\n    dispatch(actions.updateEditTaskText(text));\n    }\n\n\n  const updateCategoryHandler = () => {\n    //debugger\n    dispatch(updateTask({\n      isFavorite: task.isFavorite,\n      title: task.title,\n      isDone: !task.isDone,\n      id: task.id,\n      isListDone: isListDone\n    }))\n    dispatch(actions.changeTaskStatus(task.id, isListDone))\n  }\n\n  const changeTaskHandler = () => {\n    dispatch(actions.changeHandler(task.id));\n  }\n\n  const deleteChosenTask = () => dispatch(deleteTask(task.id));\n\n  const enterHandler = (event) => changedTaskText.length > 0 ? editHandleEnter(event) : null;\n  \n\n    //debugger\n    return (\n    <Grid item xs={12}>\n      <Paper elevation={2} style={styles.Paper}>\n\n        <Checkbox onClick={updateCategoryHandler} />\n         {/* <div>\n          {categories.map(category => {\n            if (category.id === task.categoryID) {\n              return (<span className='material-icons' key={task.categoryID} \n                style={{\n                  color: сategory.color,\n                  verticalAlign: \"middle\",\n                  margin: 5 \n                }}\n              >\n                  {category.icon}\n              </span>)\n            }\n          })}\n        </div>  */}\n        {task.isEdit\n                ? <TextField\n                  value={changedTaskText}\n                  onChange={inputTextChanger}\n                  key={task.id + 1}\n                  onKeyPress={enterHandler}\n                  />\n                : \n                  //(<span>{task.title}</span>)\n                  (<span onClick={changeTaskHandler}>{task.title}</span>) \n            }\n\n          {/* <IconButton\n            color=\"primary\"\n            aria-label=\"Edit\"\n            style={styles.Icon}\n            >\n             <Build fontSize=\"small\" />\n          </IconButton> */}\n\n          <StyledButton className=\"material-icons\" onClick={updateTaskFavorite}>\n            {task.isFavorite ?  <StarIcon /> : <StarBorderIcon /> }\n          </StyledButton>\n        \n          <IconButton\n            color=\"secondary\"\n            aria-label=\"Delete\"\n            onClick={deleteChosenTask}\n          >\n            <Delete fontSize=\"small\" />\n          </IconButton>\n\n      </Paper>\n    </Grid>\n    )\n}\n\nexport default TaskItem;","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskItem/taskButton.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/utils/links.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/pages/Main/Main.js",["100","101","102","103"],"import { Button } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport TaskInput from \"../../components/TaskInput/TaskInput\";\nimport List from \"../../components/List/List\";\n\n\nconst Main = () => {\n    return (\n        <div>\n            <div className=\"main_title\">\n                <h1>Tasks</h1>\n            </div>\n            <div className=\"main_list\">\n                <div className=\"AppTaskCreator\">\n                    <TaskInput />\n                </div>\n\n                <div>\n                    <h5>Фильтрация по периоду:</h5>\n                    <div className='AppListDateFilter'>\n                        <span className=\"AppText\">с</span>\n                <MuiPickersUtilsProvider>\n                    <KeyboardDatePicker\n                        variant=\"inline\"\n                        format=\"dd-MM-yyyy\"\n                        margin=\"normal\"\n                        KeyboardButtonProps={{\n                            \"aria-label\": \"change date\",\n                        }}\n                        disableToolbar\n                    />\n                </MuiPickersUtilsProvider>\n                        <span className=\"AppText\">по</span>\n                <MuiPickersUtilsProvider>\n                    <KeyboardDatePicker\n                        variant=\"inline\"\n                        format=\"dd-MM-yyyy\"\n                        margin=\"normal\"\n                    />\n                </MuiPickersUtilsProvider>\n                    </div>\n                    <Button\n                        variant=\"outlined\"\n                        /* onClick={setSelectDate} */\n                    >\n                        Filter\n                    </Button>\n                </div>\n                <List isListDone={false} />\n            </div>\n        </div>\n    );\n};\n\nexport default Main;\n","/home/alexandr/to-do-list/alexandr-testwork/src/pages/CompletedTasks/CompletedTasks.js",["104"],"import React, { useState } from 'react';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n/* import LocalizationProvider from '@material-ui/lab/LocalizationProvider'; */\nimport List from '../../components/List/List';\n\nconst CompletedTasks = () => {\n    return (\n        <div className='container'>\n            <h1>Completed Tasks</h1>\n            <div className='comleted_list'>\n                <div>\n                    <MuiPickersUtilsProvider>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            format=\"yyyy-MM-dd\"\n                            variant=\"inline\"\n                            KeyboardButtonProps ={{ \"aria-label\" : \"change date\" }}\n                        />\n                    </MuiPickersUtilsProvider>\n\n                    <MuiPickersUtilsProvider>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            format=\"yyyy-MM-dd\"\n                            variant=\"inline\"\n                            KeyboardButtonProps ={{ \"aria-label\" : \"change date\" }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </div>\n                <List isListDone />\n            </div>\n        </div>\n    )\n}\n\nexport default CompletedTasks;","/home/alexandr/to-do-list/alexandr-testwork/src/utils/routes.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskInput/TaskInput.js",["105","106","107","108","109","110"],"import React, { useEffect, useState } from 'react';\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { addTask, actions } from '../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ListHook from '../../hooks/ListHook';\nimport { getCategoriesFromState, getNewTaskText, selectDefaultCategoryID } from '../../redux/selectors/selectors';\nimport { Select } from '@material-ui/core';\nimport { Icon } from '../Icon/icon';\n\n\n\n\n const TaskInput = () => {\n    \n    const newTaskText = useSelector(getNewTaskText);\n     const categories = useSelector(getCategoriesFromState);\n     const categoryID = useSelector(selectDefaultCategoryID);\n     const [open, setOpen] = useState(false);\n     const [category, setCategory] = useState(categoryID);\n     const [taskDate, setTaskDate] = useState(new Date(Date.now()));\n     const dispatch = useDispatch();\n\n     useEffect(() => {\n         setCategory(categoryID);\n     }, [categoryID]); \n\n     const onOpen = () => {\n         setOpen(true);\n     }\n\n     const onClose = () => {\n         setOpen(false);\n     }\n\n     const newTaskParams = {\n         title: newTaskText,\n         isDone: false,\n         isEdit: false,\n         categoryID: categoryID,\n         isFavorite: false,\n         date: taskDate.valueOf()\n     }\n                   \n     const addHandleEnter = (event) => {\n         if (newTaskText && newTaskText.length < 30 && event.key === 'Enter') {\n             dispatch(addTask(newTaskParams)                                                                                         )\n         }\n     }\n\n     const inputChange = event => {\n        const { value } = event.target;\n        const text = value;\n        dispatch(actions.updateNewMessageText(text));\n     }\n\n     const handleChangeCategory = (event) => {\n         dispatch(actions.setCategory(event.target.value));\n     }\n\n     //debugger;\n     return (\n        <div className='todo_form'>\n            <Input\n            value={newTaskText}\n            onChange={inputChange}\n            onKeyPress={addHandleEnter}\n            placeholder='Todo'\n            style={{ width: \"90%\" }}\n            />\n        \n            <Select onOpen={onOpen}\n                    onClose={onClose}\n                    onChange={handleChangeCategory}\n                    value={category}\n            >\n                    {/* {\n                        categories.map(({ id, color, icon, name}) => (\n                            <MenuItem key={id} value={id}>\n                                <>\n                                    <Icon color={color} icon={icon} />\n                                    {open && name}\n                                </>\n    \n                            </MenuItem>\n                        ))\n                    } */}\n            </Select>\n\n            <Button \n            type=\"submit\"\n            disabled={newTaskText.length === 0 || newTaskText.length > 30}\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ width: \"10%\" }}\n            onClick={() => {\n                newTaskText && newTaskText.length < 10 && dispatch(addTask(newTaskParams));\n            }}\n            >\n                Add\n            </Button>\n        </div>\n    );\n }\n\n\nexport default TaskInput;","/home/alexandr/to-do-list/alexandr-testwork/src/components/List/List.js",["111","112","113"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport TaskItem from \"../TaskItem/TaskItem\";\nimport { useSelector } from 'react-redux';\nimport ListHook from '../../hooks/ListHook';\n\nconst List = ({ isListDone }) => {\n    const { tasks, categories } = ListHook();\n\n    //debugger;\n    return (\n        <Grid container>\n            {tasks.map((task) => {\n                return <TaskItem \n                            key={task.id} \n                            task={task} \n                            isListDone={isListDone}\n                            categories={categories}\n                        />\n            })}\n        </Grid>\n    )\n}\n\n\nexport default List;\n\n\n\n",{"ruleId":"114","severity":1,"message":"115","line":7,"column":10,"nodeType":"116","messageId":"117","endLine":7,"endColumn":23},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"114","severity":1,"message":"122","line":4,"column":23,"nodeType":"116","messageId":"117","endLine":4,"endColumn":27},{"ruleId":"114","severity":1,"message":"123","line":4,"column":29,"nodeType":"116","messageId":"117","endLine":4,"endColumn":32},{"ruleId":"114","severity":1,"message":"124","line":4,"column":34,"nodeType":"116","messageId":"117","endLine":4,"endColumn":40},{"ruleId":"118","replacedBy":"125"},{"ruleId":"120","replacedBy":"126"},{"ruleId":"114","severity":1,"message":"127","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":13},{"ruleId":"114","severity":1,"message":"128","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":17,"column":8,"nodeType":"131","endLine":17,"endColumn":10,"suggestions":"132"},{"ruleId":"114","severity":1,"message":"133","line":3,"column":7,"nodeType":"116","messageId":"117","endLine":3,"endColumn":12},{"ruleId":"114","severity":1,"message":"134","line":4,"column":7,"nodeType":"116","messageId":"117","endLine":4,"endColumn":11},{"ruleId":"114","severity":1,"message":"135","line":2,"column":23,"nodeType":"116","messageId":"117","endLine":2,"endColumn":29},{"ruleId":"114","severity":1,"message":"136","line":4,"column":18,"nodeType":"116","messageId":"117","endLine":4,"endColumn":23},{"ruleId":"114","severity":1,"message":"137","line":4,"column":25,"nodeType":"116","messageId":"117","endLine":4,"endColumn":29},{"ruleId":"114","severity":1,"message":"138","line":2,"column":16,"nodeType":"116","messageId":"117","endLine":2,"endColumn":25},{"ruleId":"114","severity":1,"message":"128","line":2,"column":27,"nodeType":"116","messageId":"117","endLine":2,"endColumn":35},{"ruleId":"114","severity":1,"message":"139","line":3,"column":9,"nodeType":"116","messageId":"117","endLine":3,"endColumn":20},{"ruleId":"114","severity":1,"message":"140","line":3,"column":22,"nodeType":"116","messageId":"117","endLine":3,"endColumn":33},{"ruleId":"114","severity":1,"message":"128","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"141","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":16},{"ruleId":"114","severity":1,"message":"142","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":16},{"ruleId":"114","severity":1,"message":"143","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":14},{"ruleId":"114","severity":1,"message":"144","line":18,"column":12,"nodeType":"116","messageId":"117","endLine":18,"endColumn":22},{"ruleId":"114","severity":1,"message":"145","line":20,"column":13,"nodeType":"116","messageId":"117","endLine":20,"endColumn":17},{"ruleId":"114","severity":1,"message":"146","line":22,"column":23,"nodeType":"116","messageId":"117","endLine":22,"endColumn":34},{"ruleId":"114","severity":1,"message":"138","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"128","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"140","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":21},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'Hidden' is defined but never used.",["147"],["148"],"'React' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'color' is assigned a value but never used.","'icon' is assigned a value but never used.","'Button' is defined but never used.","'Build' is defined but never used.","'Star' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'MenuItem' is defined but never used.","'ListHook' is defined but never used.","'Icon' is defined but never used.","'categories' is assigned a value but never used.","'open' is assigned a value but never used.","'setTaskDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [dispatch]",{"range":"152","text":"153"},[682,684],"[dispatch]"]
=======
[{"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\index.js":"1","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\App.js":"2","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\store.js":"3","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\TaskInput.js":"4","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\List.js":"5","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\utils\\links.js":"6","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\utils\\routes.js":"7","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\reducers\\reducer.js":"8","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\actions.js":"9","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\hooks\\ListHook.js":"10","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\selectors\\selectors.js":"11","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\Icon\\icon.js":"12","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\TaskItem\\TaskItem.js":"13","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\pages\\CompletedTasks\\CompletedTasks.js":"14","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\pages\\Main\\Main.js":"15","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\api\\api.js":"16","C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\TaskItem\\taskButton.js":"17"},{"size":355,"mtime":1621008919763,"results":"18","hashOfConfig":"19"},{"size":1387,"mtime":1621008919757,"results":"20","hashOfConfig":"19"},{"size":201,"mtime":1621008919767,"results":"21","hashOfConfig":"19"},{"size":3395,"mtime":1621008919760,"results":"22","hashOfConfig":"19"},{"size":546,"mtime":1621008919759,"results":"23","hashOfConfig":"19"},{"size":238,"mtime":1621008919769,"results":"24","hashOfConfig":"19"},{"size":363,"mtime":1621008919770,"results":"25","hashOfConfig":"19"},{"size":3215,"mtime":1621008919766,"results":"26","hashOfConfig":"19"},{"size":2664,"mtime":1621008919765,"results":"27","hashOfConfig":"19"},{"size":734,"mtime":1621008919762,"results":"28","hashOfConfig":"19"},{"size":456,"mtime":1621008919767,"results":"29","hashOfConfig":"19"},{"size":268,"mtime":1621008919759,"results":"30","hashOfConfig":"19"},{"size":3501,"mtime":1621008919760,"results":"31","hashOfConfig":"19"},{"size":950,"mtime":1621008919764,"results":"32","hashOfConfig":"19"},{"size":432,"mtime":1621008919764,"results":"33","hashOfConfig":"19"},{"size":1603,"mtime":1621008919757,"results":"34","hashOfConfig":"19"},{"size":263,"mtime":1621008919761,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1h355z9",{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\index.js",["70"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\App.js",["71","72","73","74"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\store.js",[],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\TaskInput.js",["75","76"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\List.js",["77","78","79","80"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\utils\\links.js",[],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\utils\\routes.js",[],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\reducers\\reducer.js",[],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\actions.js",["81"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\hooks\\ListHook.js",["82","83","84"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\redux\\selectors\\selectors.js",[],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\Icon\\icon.js",["85","86"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\TaskItem\\TaskItem.js",["87","88","89","90","91","92"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\pages\\CompletedTasks\\CompletedTasks.js",["93"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\pages\\Main\\Main.js",["94","95","96","97","98"],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\api\\api.js",[],"C:\\Users\\alexa\\Desktop\\флоу-домино\\alexandr-testwork\\src\\components\\TaskItem\\taskButton.js",[],{"ruleId":"99","severity":1,"message":"100","line":7,"column":10,"nodeType":"101","messageId":"102","endLine":7,"endColumn":23},{"ruleId":"99","severity":1,"message":"103","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"104","line":4,"column":23,"nodeType":"101","messageId":"102","endLine":4,"endColumn":27},{"ruleId":"99","severity":1,"message":"105","line":4,"column":29,"nodeType":"101","messageId":"102","endLine":4,"endColumn":32},{"ruleId":"99","severity":1,"message":"106","line":4,"column":34,"nodeType":"101","messageId":"102","endLine":4,"endColumn":40},{"ruleId":"99","severity":1,"message":"107","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"108","line":22,"column":23,"nodeType":"101","messageId":"102","endLine":22,"endColumn":34},{"ruleId":"99","severity":1,"message":"109","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"110","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"111","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":21},{"ruleId":"99","severity":1,"message":"112","line":8,"column":20,"nodeType":"101","messageId":"102","endLine":8,"endColumn":30},{"ruleId":"99","severity":1,"message":"113","line":62,"column":11,"nodeType":"101","messageId":"102","endLine":62,"endColumn":19},{"ruleId":"99","severity":1,"message":"114","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"110","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":15,"column":8,"nodeType":"117","endLine":15,"endColumn":10,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"119","line":3,"column":7,"nodeType":"101","messageId":"102","endLine":3,"endColumn":12},{"ruleId":"99","severity":1,"message":"120","line":4,"column":7,"nodeType":"101","messageId":"102","endLine":4,"endColumn":11},{"ruleId":"99","severity":1,"message":"110","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"121","line":2,"column":23,"nodeType":"101","messageId":"102","endLine":2,"endColumn":29},{"ruleId":"99","severity":1,"message":"122","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":12},{"ruleId":"99","severity":1,"message":"123","line":5,"column":18,"nodeType":"101","messageId":"102","endLine":5,"endColumn":23},{"ruleId":"99","severity":1,"message":"124","line":5,"column":25,"nodeType":"101","messageId":"102","endLine":5,"endColumn":29},{"ruleId":"99","severity":1,"message":"125","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":15},{"ruleId":"99","severity":1,"message":"110","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"109","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"110","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":35},{"ruleId":"99","severity":1,"message":"126","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":20},{"ruleId":"99","severity":1,"message":"111","line":2,"column":22,"nodeType":"101","messageId":"102","endLine":2,"endColumn":33},{"ruleId":"99","severity":1,"message":"127","line":5,"column":7,"nodeType":"101","messageId":"102","endLine":5,"endColumn":11},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Hidden' is defined but never used.","'ListHook' is defined but never used.","'setTaskDate' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'categories' is assigned a value but never used.","'response' is assigned a value but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'color' is assigned a value but never used.","'icon' is assigned a value but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'Build' is defined but never used.","'Star' is defined but never used.","'Input' is defined but never used.","'useDispatch' is defined but never used.","'Main' is assigned a value but never used.",{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},[611,613],"[dispatch]"]
>>>>>>> 589fe2f2a28d7b5370fa26bb0504926055ab2ff7
