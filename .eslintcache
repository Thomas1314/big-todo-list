[{"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\index.js":"1","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\App.js":"2","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\store.js":"3","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\reducer.js":"4","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\List.js":"5","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TodoInput.js":"6","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\actions.js":"7","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\states.js":"8","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TodoItem.js":"9","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\constants.js":"10"},{"size":348,"mtime":1620120396578,"results":"11","hashOfConfig":"12"},{"size":706,"mtime":1620301913895,"results":"13","hashOfConfig":"12"},{"size":191,"mtime":1620301898210,"results":"14","hashOfConfig":"12"},{"size":930,"mtime":1620293560351,"results":"15","hashOfConfig":"12"},{"size":761,"mtime":1620219134870,"results":"16","hashOfConfig":"12"},{"size":1390,"mtime":1620132388722,"results":"17","hashOfConfig":"12"},{"size":412,"mtime":1620301875287,"results":"18","hashOfConfig":"12"},{"size":203,"mtime":1620120916884,"results":"19","hashOfConfig":"12"},{"size":1923,"mtime":1620122906699,"results":"20","hashOfConfig":"12"},{"size":117,"mtime":1620293564103,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1imla7n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\index.js",[],["48","49"],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\App.js",["50"],"import React, { Fragment } from 'react';\nimport TodoInput from './components/TodoInput';\nimport List from './components/List';\nimport { Paper, Grid } from \"@material-ui/core\";\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    margin: \"auto\", \n    textAlign: \"center\",\n    width: 500\n  }\n};\n\nconst App = () => {\n\n  return (\n    <div>\n\n      <Grid container spacing={0}>\n          <Grid item xs={12}>\n            <Paper style={styles.Paper}>\n              <TodoInput />\n            </Paper>\n          </Grid>\n\n        <Grid item xs={12} style={styles.Paper}>\n          <Grid container>\n            <List />\n          </Grid>        \n        </Grid>\n      </Grid>\n\n    </div>\n    );\n}\n  \n export default App;\n","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\store.js",[],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\reducer.js",["51","52"],"import { ADD_TODO, DELETE_TODO, EDIT_TODO } from './constants';\n\n\nconst initialState = {\n    tasks: [],\n    newTaskText: '',\n    isFetching: false\n}\n\nexport const reducer = (state, action) => {\n    //debugger\n    let newTasks\n    switch (action.type) {\n        case ADD_TODO:\n            return [...state, action.payload];\n\n        case DELETE_TODO:\n            newTasks = [...state];\n            newTasks = newTasks.filter(el => el.id !== action.payload);\n            return newTasks;\n\n        case EDIT_TODO:\n            newTasks = [...state];\n            let index = -1;\n            for (let i = 0; i < newTasks.length; i++) {\n                index++;\n                if (newTasks[i].id === action.payload.id) {\n                    break;\n                }\n\n            }\n            if (index !== -1) {\n                newTasks[index] = action.payload;\n                return newTasks;\n            }\n\n    }\n    return state;\n}","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\List.js",["53"],"import React, { useEffect, useState } from \"react\";\nimport TodoItem from \"../components/TodoItem\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nconst List = () => {\n    const [todos, setTodos] = useState([]);\n\n    useEffect(() => {\n        axios.get('http://localhost:3000/tasks')\n        .then(res => {\n            //debugger;\n            const responeTodos = res.data;\n            setTodos(responeTodos); \n        })\n    }, [])\n\n    //let todos = useSelector(state => state);\n    debugger\n    return (\n        <Grid container>\n            {todos.map((todo) => {\n                return <TodoItem key={todos.id} todo={todo} />\n            })}\n        </Grid>\n    )\n}\n\n\nexport default List;\n\n\n\n","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TodoInput.js",[],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\actions.js",["54"],"import { ADD_TODO, DELETE_TODO, EDIT_TODO } from './constants';\nimport axios from 'axios';\n\nexport function addTodo(todo) {\n    //debugger\n    return {\n        type: ADD_TODO,\n        payload: todo\n    }\n}\n\nexport function deleteTodo(id) {\n    return {\n        type: DELETE_TODO,\n        payload: id\n    }\n}\n\nexport function editTodo(todo) {\n    return {\n        type: EDIT_TODO,\n        payload: todo\n    }\n}\n\n\n","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\states.js",[],["55","56"],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TodoItem.js",[],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\constants.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":4,"column":7,"nodeType":"63","messageId":"64","endLine":4,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":13,"column":5,"nodeType":"68","messageId":"69","endLine":37,"endColumn":6},{"ruleId":"61","severity":1,"message":"70","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":21},{"ruleId":"61","severity":1,"message":"71","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"57","replacedBy":"72"},{"ruleId":"59","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'initialState' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useSelector' is defined but never used.","'axios' is defined but never used.",["74"],["75"],"no-global-assign","no-unsafe-negation"]