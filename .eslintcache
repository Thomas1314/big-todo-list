[{"/home/alexandr/ToDoList/alexandr-testwork/src/index.js":"1","/home/alexandr/ToDoList/alexandr-testwork/src/App.jsx":"2","/home/alexandr/ToDoList/alexandr-testwork/src/utils/routes.js":"3","/home/alexandr/ToDoList/alexandr-testwork/src/AppNavbar.jsx":"4","/home/alexandr/ToDoList/alexandr-testwork/src/AppNavbar.styles.js":"5","/home/alexandr/ToDoList/alexandr-testwork/src/pages/Main.jsx":"6","/home/alexandr/ToDoList/alexandr-testwork/src/pages/CompletedTasks.jsx":"7","/home/alexandr/ToDoList/alexandr-testwork/src/pages/Main.styles.js":"8","/home/alexandr/ToDoList/alexandr-testwork/src/pages/CompletedTasks.styles.js":"9","/home/alexandr/ToDoList/alexandr-testwork/src/pages/Settings.styles.js":"10","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskInput.jsx":"11","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskListWrapper.jsx":"12","/home/alexandr/ToDoList/alexandr-testwork/src/components/CategoriesList.jsx":"13","/home/alexandr/ToDoList/alexandr-testwork/src/components/CategoryCreator.jsx":"14","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskList.jsx":"15","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskInput.styles.js":"16","/home/alexandr/ToDoList/alexandr-testwork/src/utils/QueryParams.js":"17","/home/alexandr/ToDoList/alexandr-testwork/src/hooks/ListHook.js":"18","/home/alexandr/ToDoList/alexandr-testwork/src/components/Filter.jsx":"19","/home/alexandr/ToDoList/alexandr-testwork/src/components/Category.jsx":"20","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskItem.styles.js":"21","/home/alexandr/ToDoList/alexandr-testwork/src/components/Categories.styles.js":"22","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskButton.jsx":"23","/home/alexandr/ToDoList/alexandr-testwork/src/components/Preloader/Preloader.js":"24","/home/alexandr/ToDoList/alexandr-testwork/src/components/Preloader/Preloader.styles.js":"25","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskItem.tsx":"26","/home/alexandr/ToDoList/alexandr-testwork/src/api/api.ts":"27","/home/alexandr/ToDoList/alexandr-testwork/src/components/Icon.tsx":"28","/home/alexandr/ToDoList/alexandr-testwork/src/utils/icons.ts":"29","/home/alexandr/ToDoList/alexandr-testwork/src/utils/navLinks.ts":"30","/home/alexandr/ToDoList/alexandr-testwork/src/utils/colors.ts":"31","/home/alexandr/ToDoList/alexandr-testwork/src/redux/store.ts":"32","/home/alexandr/ToDoList/alexandr-testwork/src/redux/reducers/reducer.ts":"33","/home/alexandr/ToDoList/alexandr-testwork/src/pages/Settings.tsx":"34","/home/alexandr/ToDoList/alexandr-testwork/src/redux/actions.ts":"35","/home/alexandr/ToDoList/alexandr-testwork/src/redux/selectors/selectors.ts":"36","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskListWrapper.styles.js":"37"},{"size":296,"mtime":1621865892174,"results":"38","hashOfConfig":"39"},{"size":452,"mtime":1621865160383,"results":"40","hashOfConfig":"39"},{"size":385,"mtime":1621932881803,"results":"41","hashOfConfig":"39"},{"size":518,"mtime":1621865456070,"results":"42","hashOfConfig":"39"},{"size":419,"mtime":1621865267232,"results":"43","hashOfConfig":"39"},{"size":3098,"mtime":1622116218158,"results":"44","hashOfConfig":"39"},{"size":2048,"mtime":1622185726282,"results":"45","hashOfConfig":"39"},{"size":459,"mtime":1621925779136,"results":"46","hashOfConfig":"39"},{"size":243,"mtime":1621925762740,"results":"47","hashOfConfig":"39"},{"size":1315,"mtime":1621925797712,"results":"48","hashOfConfig":"39"},{"size":2833,"mtime":1622188235451,"results":"49","hashOfConfig":"39"},{"size":3605,"mtime":1622206129599,"results":"50","hashOfConfig":"39"},{"size":564,"mtime":1621943695813,"results":"51","hashOfConfig":"39"},{"size":4255,"mtime":1621949558044,"results":"52","hashOfConfig":"39"},{"size":1416,"mtime":1622190523655,"results":"53","hashOfConfig":"39"},{"size":146,"mtime":1621865820614,"results":"54","hashOfConfig":"39"},{"size":143,"mtime":1622109400045,"results":"55","hashOfConfig":"39"},{"size":931,"mtime":1622186263618,"results":"56","hashOfConfig":"39"},{"size":2044,"mtime":1622113022110,"results":"57","hashOfConfig":"39"},{"size":3159,"mtime":1621865631904,"results":"58","hashOfConfig":"39"},{"size":820,"mtime":1622100289981,"results":"59","hashOfConfig":"39"},{"size":1137,"mtime":1621865592456,"results":"60","hashOfConfig":"39"},{"size":266,"mtime":1621865695205,"results":"61","hashOfConfig":"39"},{"size":336,"mtime":1622100477511,"results":"62","hashOfConfig":"39"},{"size":242,"mtime":1622100282193,"results":"63","hashOfConfig":"39"},{"size":4574,"mtime":1622209545756,"results":"64","hashOfConfig":"39"},{"size":2262,"mtime":1622206334593,"results":"65","hashOfConfig":"39"},{"size":506,"mtime":1622197963596,"results":"66","hashOfConfig":"39"},{"size":121,"mtime":1622198358965,"results":"67","hashOfConfig":"39"},{"size":261,"mtime":1622197081726,"results":"68","hashOfConfig":"39"},{"size":123,"mtime":1622197164279,"results":"69","hashOfConfig":"39"},{"size":575,"mtime":1622204438094,"results":"70","hashOfConfig":"39"},{"size":5559,"mtime":1622208950305,"results":"71","hashOfConfig":"39"},{"size":3298,"mtime":1622198941015,"results":"72","hashOfConfig":"39"},{"size":4893,"mtime":1622207523176,"results":"73","hashOfConfig":"39"},{"size":837,"mtime":1622209385945,"results":"74","hashOfConfig":"39"},{"size":321,"mtime":1622206004972,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1aijlhl",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alexandr/ToDoList/alexandr-testwork/src/index.js",[],["158","159"],"/home/alexandr/ToDoList/alexandr-testwork/src/App.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/utils/routes.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/AppNavbar.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/AppNavbar.styles.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/pages/Main.jsx",["160","161","162"],"import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport TaskInput from '../components/TaskInput';\nimport { List } from './../components/TaskList';\nimport { Paper, Grid } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/moment';\nimport { useStyles } from './Main.styles';\nimport { ListWrapper } from '../components/TaskListWrapper';\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    margin: 'auto',\n    textAlign: 'center',\n    width: 500,\n  },\n};\n\nexport const Main = () => {\n  const classes = useStyles();\n\n  const [taskDate, setTaskDate] = useState(new Date(Date.now()));\n  const [selectedDateFrom, setSelectedDateFrom] = useState(null);\n\n  const [selectedDateTo, setSelectedDateTo] = useState(null);\n\n  const [selectDateFrom, setSelectDateFrom] = useState(null);\n\n  const [selectDateTo, setSelectDateTo] = useState(null);\n\n  const handleDateFromChange = (date) => {\n    setSelectedDateFrom(date);\n  };\n\n  const handleDateToChange = (date) => {\n    setSelectedDateTo(date);\n  };\n\n  const setSelectDate = () => {\n    setSelectDateFrom(selectedDateFrom);\n    setSelectDateTo(selectedDateTo);\n  };\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <div className={classes.MainListDateFilter}>\n          <span className=\"AppText\">с</span>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              variant=\"inline\"\n              format=\"dd-MM-yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              value={selectedDateFrom}\n              onChange={handleDateFromChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n              /* style={{width: 180, marginBottom: \"20px\", marginRight: \"20px\"}} */\n              disableToolbar\n            />\n          </MuiPickersUtilsProvider>\n          <span className=\"AppText\">по</span>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              variant=\"inline\"\n              format=\"dd-MM-yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline2\"\n              value={selectedDateTo}\n              onChange={handleDateToChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n              /* style={{width: 180, marginBottom: \"20px\"}} */\n              disableToolbar\n            />\n          </MuiPickersUtilsProvider>\n\n          <Button variant=\"outlined\" onClick={setSelectDate}>\n            Filter\n          </Button>\n        </div>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper style={styles.Paper}>\n          <TaskInput />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} style={styles.Paper}>\n        <Grid container>\n          <ListWrapper\n            isListDone={false}\n            selectedDateFrom={selectDateFrom}\n            selectedDateTo={selectDateTo}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","/home/alexandr/ToDoList/alexandr-testwork/src/pages/CompletedTasks.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/pages/Main.styles.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/pages/CompletedTasks.styles.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/pages/Settings.styles.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskInput.jsx",["163","164"],"import React, { useEffect, useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { addTask, actions } from '../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getCategoriesFromState,\n  getNewTaskText,\n  selectDefaultCategoryID,\n} from '../redux/selectors/selectors';\nimport { Select } from '@material-ui/core';\nimport { Icon } from './Icon';\nimport { useStyles } from './TaskInput.styles';\n\nconst TaskInput = () => {\n  const classes = useStyles();\n\n  const newTaskText = useSelector(getNewTaskText);\n  const categories = useSelector(getCategoriesFromState);\n  const categoryID = useSelector(selectDefaultCategoryID);\n  const [open, setOpen] = useState(false);\n  const [category, setCategory] = useState(categoryID);\n  const [taskDate, setTaskDate] = useState(new Date(Date.now()));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCategory(categoryID);\n  }, []);\n\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const newTaskParams = {\n    title: newTaskText,\n    isDone: false,\n    isEdit: false,\n    categoryID: categoryID,\n    isFavorite: false,\n    date: taskDate.valueOf(),\n  };\n\n  const addHandleEnter = (event) => {\n    if (newTaskText && newTaskText.length < 30 && event.key === 'Enter') {\n      dispatch(addTask(newTaskParams));\n    }\n  };\n\n  const inputChange = (event) => {\n    const { value } = event.target;\n    const text = value;\n    dispatch(actions.updateNewMessageText(text));\n  };\n\n  const handleChangeCategory = (event) => {\n    dispatch(actions.setCategory(event.target.value));\n  };\n  return (\n    <div className={classes.todoForm}>\n      <Input\n        value={newTaskText}\n        onChange={inputChange}\n        onKeyPress={addHandleEnter}\n        placeholder=\"Todo\"\n        style={{ width: '90%' }}\n      />\n      {/* {category !== null ? ( */}\n      <Select\n        onOpen={onOpen}\n        onClose={onClose}\n        onChange={handleChangeCategory}\n        value={category}\n      >\n        {categories.map(({ id, color, icon, name }) => (\n          <MenuItem key={id} value={id}>\n            <>\n              <Icon color={color} icon={icon} />\n              {open && name}\n            </>\n          </MenuItem>\n        ))}\n      </Select>\n      {/*  ) : null} */}\n      <Button\n        type=\"submit\"\n        disabled={newTaskText.length === 0 || newTaskText.length > 30}\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ width: '10%' }}\n        onClick={() => {\n          newTaskText &&\n            newTaskText.length < 10 &&\n            dispatch(addTask(newTaskParams));\n        }}\n      >\n        Add\n      </Button>\n    </div>\n  );\n};\n\nexport default TaskInput;\n","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskListWrapper.jsx",["165","166"],"/home/alexandr/ToDoList/alexandr-testwork/src/components/CategoriesList.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/CategoryCreator.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskList.jsx",["167","168","169","170","171","172"],"import React, { useEffect, useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport TaskItem from './TaskItem';\nimport FlipMove from 'react-flip-move';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nexport const List = ({ tasks, end, setEnd, categories, isListDone }) => {\n  const [sortTasks, setSortTasks] = useState(tasks);\n  const [tasksLength, setTasksLength] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    setSortTasks(\n      tasks\n        .filter((task) => task.isDone === isListDone)\n        .sort((a) => (a.isFavorite ? -1 : 1))\n    );\n  }, [tasks]);\n\n  /* useEffect(() => {\n    end <= tasks.length ? setHasMore(true) : setHasMore(false);\n    setTasksLength(tasks.length);\n  }, [tasks.length, end]); */\n  return (\n    <Grid container>\n      {/* <InfiniteScroll\n        dataLength={tasksLength}\n        next={() => setEnd(end + 4)}\n        hasMore={hasMore}\n        endMessage={\n          <p style={{ textAlign: 'center' }}>\n            <b>You have seen it all</b>\n          </p>\n        }\n      > */}\n      <FlipMove>\n        {sortTasks.map((task) => {\n          return (\n            <TaskItem\n              key={task.id}\n              task={task}\n              isListDone={isListDone}\n              categories={categories}\n            />\n          );\n        })}\n      </FlipMove>\n      {/* </InfiniteScroll> */}\n    </Grid>\n  );\n};\n","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskInput.styles.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/utils/QueryParams.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/hooks/ListHook.js",["173"],"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getTasksFromState,\n  getCategoriesFromState,\n  getIsFetching,\n  getEndNumber,\n} from '../redux/selectors/selectors';\nimport { getDefaultCategory, getCategories } from '../redux/actions';\nimport { useHistory } from 'react-router-dom';\n\nconst ListHook = () => {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const tasks = useSelector(getTasksFromState);\n  const unDoneTasks = useSelector(getTasksFromState);\n  const categories = useSelector(getCategoriesFromState);\n  const isFetching = useSelector(getIsFetching);\n  const endNumber = useSelector(getEndNumber);\n\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(getDefaultCategory());\n  }, []);\n\n  return {\n    tasks,\n    unDoneTasks,\n    categories,\n    isFetching,\n    dispatch,\n    endNumber,\n    history,\n  };\n};\n\nexport default ListHook;\n","/home/alexandr/ToDoList/alexandr-testwork/src/components/Filter.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/Category.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskItem.styles.js",[],["174","175"],"/home/alexandr/ToDoList/alexandr-testwork/src/components/Categories.styles.js",["176","177"],"import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 340,\n      sm: 650,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n});\n\nexport const useStyles = makeStyles({\n  CategoryPageContainer: {\n    minHeight: '48px',\n    minWidth: '200px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    flexDirection: 'column',\n    [theme.breakpoints.up('xs')]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n  },\n  CategoryParams: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '300px',\n  },\n  CategoryTitle: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  categoryTitleWithEdit: {\n    display: 'flex',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      textDecoration: 'underline',\n    },\n  },\n  CategoryParamsName: {\n    marginLeft: '10px',\n  },\n  CategoryPageRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n","/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskButton.jsx",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/Preloader/Preloader.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/Preloader/Preloader.styles.js",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskItem.tsx",["178"],"/home/alexandr/ToDoList/alexandr-testwork/src/api/api.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/Icon.tsx",[],["179","180"],"/home/alexandr/ToDoList/alexandr-testwork/src/utils/icons.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/utils/navLinks.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/utils/colors.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/redux/store.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/redux/reducers/reducer.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/pages/Settings.tsx",["181"],"/home/alexandr/ToDoList/alexandr-testwork/src/redux/actions.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/redux/selectors/selectors.ts",[],"/home/alexandr/ToDoList/alexandr-testwork/src/components/TaskListWrapper.styles.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":14},{"ruleId":"186","severity":1,"message":"190","line":26,"column":10,"nodeType":"188","messageId":"189","endLine":26,"endColumn":18},{"ruleId":"186","severity":1,"message":"191","line":26,"column":20,"nodeType":"188","messageId":"189","endLine":26,"endColumn":31},{"ruleId":"186","severity":1,"message":"191","line":24,"column":20,"nodeType":"188","messageId":"189","endLine":24,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":29,"column":6,"nodeType":"194","endLine":29,"endColumn":8,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":84,"column":6,"nodeType":"194","endLine":84,"endColumn":8,"suggestions":"197"},{"ruleId":"192","severity":1,"message":"198","line":104,"column":6,"nodeType":"194","endLine":104,"endColumn":61,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"200","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":22},{"ruleId":"186","severity":1,"message":"201","line":9,"column":10,"nodeType":"188","messageId":"189","endLine":9,"endColumn":21},{"ruleId":"186","severity":1,"message":"202","line":9,"column":23,"nodeType":"188","messageId":"189","endLine":9,"endColumn":37},{"ruleId":"186","severity":1,"message":"203","line":10,"column":10,"nodeType":"188","messageId":"189","endLine":10,"endColumn":17},{"ruleId":"186","severity":1,"message":"204","line":10,"column":19,"nodeType":"188","messageId":"189","endLine":10,"endColumn":29},{"ruleId":"192","severity":1,"message":"205","line":18,"column":6,"nodeType":"194","endLine":18,"endColumn":13,"suggestions":"206"},{"ruleId":"192","severity":1,"message":"207","line":25,"column":6,"nodeType":"194","endLine":25,"endColumn":8,"suggestions":"208"},{"ruleId":"182","replacedBy":"209"},{"ruleId":"184","replacedBy":"210"},{"ruleId":"186","severity":1,"message":"211","line":1,"column":22,"nodeType":"188","messageId":"189","endLine":1,"endColumn":32},{"ruleId":"186","severity":1,"message":"212","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":123,"column":38,"nodeType":"215","messageId":"216","endLine":123,"endColumn":40},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"192","severity":1,"message":"207","line":37,"column":6,"nodeType":"194","endLine":37,"endColumn":8,"suggestions":"217"},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'taskDate' is assigned a value but never used.","'setTaskDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categoryID'. Either include it or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has a missing dependency: 'parsed._sort'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'isListDone', and 'locationPath.pathname'. Either include them or remove the dependency array.",["222"],"'InfiniteScroll' is defined but never used.","'tasksLength' is assigned a value but never used.","'setTasksLength' is assigned a value but never used.","'hasMore' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isListDone'. Either include it or remove the dependency array. If 'setSortTasks' needs the current value of 'isListDone', you can also switch to useReducer instead of useState and read 'isListDone' in the reducer.",["223"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["224"],["218"],["219"],"'withStyles' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},"Update the dependencies array to be: [categoryID]",{"range":"237","text":"238"},"Update the dependencies array to be: [parsed._sort]",{"range":"239","text":"240"},"Update the dependencies array to be: [dateSort, nameSort, categoryId, end, dateFrom, dateTo, history, locationPath.pathname, dispatch, isListDone]",{"range":"241","text":"242"},"Update the dependencies array to be: [isListDone, tasks]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch]",{"range":"245","text":"246"},{"range":"247","text":"246"},[1027,1029],"[categoryID]",[2433,2435],"[parsed._sort]",[3012,3067],"[dateSort, nameSort, categoryId, end, dateFrom, dateTo, history, locationPath.pathname, dispatch, isListDone]",[623,630],"[isListDone, tasks]",[778,780],"[dispatch]",[1361,1363]]