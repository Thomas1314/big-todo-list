[{"/home/alexandr/todo-list/to-do-list-react/src/index.js":"1","/home/alexandr/todo-list/to-do-list-react/src/App.js":"2","/home/alexandr/todo-list/to-do-list-react/src/components/TaskInput.js":"3","/home/alexandr/todo-list/to-do-list-react/src/components/Todo.js":"4"},{"size":222,"mtime":1619679513078,"results":"5","hashOfConfig":"6"},{"size":2481,"mtime":1619681079652,"results":"7","hashOfConfig":"6"},{"size":1317,"mtime":1619680940218,"results":"8","hashOfConfig":"6"},{"size":1261,"mtime":1619683644891,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"jxhwkh",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alexandr/todo-list/to-do-list-react/src/index.js",[],["20","21"],"/home/alexandr/todo-list/to-do-list-react/src/App.js",["22","23","24"],"import React, { Fragment } from 'react';\nimport Task from './components/Todo'\nimport TaskInput from './components/TaskInput';\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    margin: \"auto\",\n    textAlign: \"center\",\n    width: 500\n  }\n};\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tasks: [\n        { id: 0, title: 'Create todo-react-app', done: false }, \n        { id: 1, title: 'Make a video about it', done: true },\n        { id: 2, title: 'Create simple todo-app', done: false }\n      ]    \n    }\n  }\n\n  \n\n  \n  addTask = (task) => {\n    this.setState((state) => {\n      let { tasks } = state\n      \n      return {\n        tasks: [\n          ...tasks,\n          {\n            id: tasks.length !== 0 ? tasks.length : 0,\n            title: task,\n            done: false,\n          },\n        ],\n      }\n    })\n  }\n     \n  doneTask = id => {\n    const index = this.state.tasks.map(task => task.id).indexOf(id);\n    this.setState(state => {\n      let { tasks } = state; \n      tasks[index].done = true;\n      return tasks;\n    });\n  };\n\n  returnToUnDoneTask = id => {\n    const index = this.state.tasks.map(task => task.id).indexOf(id);\n      this.setState(state => {\n      let { tasks } = state;\n      tasks[index].done = false \n      return tasks;\n    })\n  }\n  \n  deleteTask = id => {\n    const newTasks = this.state.tasks.filter(task => task.id !== id);\n    this.setState({ tasks: newTasks });\n  }\n\n\n  render() {\n    const { tasks } = this.state;\n    const activeTasks = tasks.filter(task => !task.done);\n    const doneTask = tasks.filter(task => task.done);\n\n\n    return(\n      <Fragment>\n        <Paper>\n        <h1 className='top'>Tasks: {activeTasks.length}</h1>\n        </Paper>\n        \n        <Grid container spacing={0}>\n          <Grid item xs={12}>\n            <Paper style={styles.Paper}>\n              <TaskInput addTask={this.addTask}></TaskInput>\n            </Paper>\n          </Grid>\n\n        {/*<Grid xs={12} styles={styles.Paper}>\n        {[...activeTasks, ...doneTask].map(task => (\n          <Task \n          doneTask={() => this.doneTask(task.id)}\n          returnToUnDoneTask={() => this.returnToUnDoneTask(task.id)}\n          deleteTask={() => this.deleteTask(task.id)}\n          task={task} \n          key={task.id}\n          ></Task>\n          ))}\n        </Grid>*/}\n        </Grid>\n      </Fragment>\n    );\n  } \n}\n\n\n\n\n export default App;\n","/home/alexandr/todo-list/to-do-list-react/src/components/TaskInput.js",[],"/home/alexandr/todo-list/to-do-list-react/src/components/Todo.js",["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":4,"column":23,"nodeType":"33","messageId":"34","endLine":4,"endColumn":33},{"ruleId":"31","severity":1,"message":"36","line":76,"column":11,"nodeType":"33","messageId":"34","endLine":76,"endColumn":19},{"ruleId":"31","severity":1,"message":"37","line":4,"column":18,"nodeType":"33","messageId":"34","endLine":4,"endColumn":23},{"ruleId":"31","severity":1,"message":"38","line":32,"column":11,"nodeType":"33","messageId":"34","endLine":32,"endColumn":20},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Task' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'doneTask' is assigned a value but never used.","'Build' is defined but never used.","'className' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]