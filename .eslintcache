[{"/home/alexandr/to-do-list/alexandr-testwork/src/index.js":"1","/home/alexandr/to-do-list/alexandr-testwork/src/App.js":"2","/home/alexandr/to-do-list/alexandr-testwork/src/redux/store.js":"3","/home/alexandr/to-do-list/alexandr-testwork/src/components/List.js":"4","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskInput.js":"5","/home/alexandr/to-do-list/alexandr-testwork/src/redux/reducers/reducer.js":"6","/home/alexandr/to-do-list/alexandr-testwork/src/redux/actions.js":"7","/home/alexandr/to-do-list/alexandr-testwork/src/redux/types.js":"8","/home/alexandr/to-do-list/alexandr-testwork/src/api/api.js":"9","/home/alexandr/to-do-list/alexandr-testwork/src/hooks/ListHook.js":"10","/home/alexandr/to-do-list/alexandr-testwork/src/redux/selectors/selectors.js":"11","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskItem.js":"12"},{"size":355,"mtime":1620742833837,"results":"13","hashOfConfig":"14"},{"size":874,"mtime":1620742936886,"results":"15","hashOfConfig":"14"},{"size":201,"mtime":1620719960617,"results":"16","hashOfConfig":"14"},{"size":545,"mtime":1620818192369,"results":"17","hashOfConfig":"14"},{"size":2190,"mtime":1620822719161,"results":"18","hashOfConfig":"14"},{"size":2130,"mtime":1620820867427,"results":"19","hashOfConfig":"14"},{"size":1561,"mtime":1620829547680,"results":"20","hashOfConfig":"14"},{"size":219,"mtime":1620713614992,"results":"21","hashOfConfig":"14"},{"size":828,"mtime":1620829418135,"results":"22","hashOfConfig":"14"},{"size":365,"mtime":1620726018019,"results":"23","hashOfConfig":"14"},{"size":255,"mtime":1620816675048,"results":"24","hashOfConfig":"14"},{"size":3438,"mtime":1620829665754,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1jh66eh",{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alexandr/to-do-list/alexandr-testwork/src/index.js",["57"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n",["58","59"],"/home/alexandr/to-do-list/alexandr-testwork/src/App.js",["60","61","62","63","64","65","66","67","68","69","70"],"import React, { Fragment } from 'react';\nimport TaskInput from './components/TaskInput';\nimport List from './components/List';\nimport { Paper, Grid, Tabs, Tab, Hidden } from \"@material-ui/core\";\nimport { \n  BrowserRouter, \n  NavLink, \n  Route, \n  Switch,\n  Redirect,\n  Link, \n  Router\n} from 'react-router-dom';\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    margin: \"auto\", \n    textAlign: \"center\",\n    width: 500\n  }\n};\n\nconst App = () => {\n\n  return (\n    <div>\n        <Grid container spacing={0}>\n            <Grid item xs={12}>\n              <Paper style={styles.Paper}>\n                <TaskInput />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} style={styles.Paper}>\n              <Grid container>\n                <List />\n              </Grid>        \n            </Grid>\n        </Grid>\n    </div>\n    );\n}\n  \n export default App;\n","/home/alexandr/to-do-list/alexandr-testwork/src/redux/store.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/components/List.js",["71","72","73","74"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport TaskItem from \"../components/TaskItem\";\nimport { useSelector } from 'react-redux';\nimport ListHook from '../hooks/ListHook';\n\nconst List = () => {\n    const { tasks, categories, isListDone } = ListHook();\n\n    debugger;\n    return (\n        <Grid container>\n            {tasks.map((task) => {\n                return <TaskItem key={task.id} task={task} isListDone={isListDone}/>\n            })}\n        </Grid>\n    )\n}\n\n\nexport default List;\n\n\n\n","/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskInput.js",["75","76","77","78"],"import React, { useState } from 'react';\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { addTask, actions } from '../redux/actions';\nimport { useSelector } from 'react-redux';\nimport ListHook from '../hooks/ListHook';\nimport { getNewTaskText } from '../redux/selectors/selectors';\nimport { Select } from '@material-ui/core';\nimport API from '../api/api';\n\n const TaskInput = () => {\n     const [open, setOpen] = useState(false);\n     const [input, setInput] = useState('');\n     const newTaskText = useSelector(getNewTaskText);\n     const { dispatch } = ListHook();\n\n     const onOpen = () => {\n         setOpen(true);\n     }\n\n     const onClose = () => {\n         setOpen(false);\n     }\n\n      /* const addTodo = async (e) => {\n          e.preventDefault();                  \n          if (input) {\n              const todoToAdd = {\n                  title: `${input}`,\n                  isDone: false,\n                  isEdit: false                                                                                                                                 \n              };\n              await API.addTask('task', itemToAdd);\n              const response = await API.getTasks()\n          }\n      } */\n\n     const inputChange = event => {\n        const { value } = event.target;\n        const text = value;\n        dispatch(actions.updateNewMessageText(text));\n     }\n\n     //debugger;\n     return (\n        <div className='todo_form'>\n            <Input\n            value={newTaskText}\n            onChange={inputChange}\n            placeholder='Todo'\n            style={{ width: \"90%\" }}\n            />\n            <Select onOpen={onOpen}\n                    onClose={onClose}\n            >\n\n            </Select>\n\n            <Button \n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ width: \"10%\" }}\n            onClick={() => dispatch(addTask({\n                title: newTaskText,\n                isDone: false,\n                isEdit: false,\n            }))}\n            >\n                Add\n            </Button>\n        </div>\n    );\n }\n\n\nexport default TaskInput;","/home/alexandr/to-do-list/alexandr-testwork/src/redux/reducers/reducer.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/redux/actions.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/redux/types.js",[],["79","80"],"/home/alexandr/to-do-list/alexandr-testwork/src/api/api.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/hooks/ListHook.js",["81","82","83"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTasksFromState } from '../redux/selectors/selectors';\n\nconst ListHook = () => {\n    const dispatch = useDispatch();\n    const tasks = useSelector(getTasksFromState);\n\n    return {\n        tasks,\n        dispatch\n    }\n}\n\nexport default ListHook;","/home/alexandr/to-do-list/alexandr-testwork/src/redux/selectors/selectors.js",[],"/home/alexandr/to-do-list/alexandr-testwork/src/components/TaskItem.js",["84","85","86","87","88","89"],{"ruleId":"90","severity":1,"message":"91","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":23},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"99","line":4,"column":23,"nodeType":"92","messageId":"93","endLine":4,"endColumn":27},{"ruleId":"90","severity":1,"message":"100","line":4,"column":29,"nodeType":"92","messageId":"93","endLine":4,"endColumn":32},{"ruleId":"90","severity":1,"message":"101","line":4,"column":34,"nodeType":"92","messageId":"93","endLine":4,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":6,"column":3,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":7,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":10},{"ruleId":"90","severity":1,"message":"103","line":8,"column":3,"nodeType":"92","messageId":"93","endLine":8,"endColumn":8},{"ruleId":"90","severity":1,"message":"104","line":9,"column":3,"nodeType":"92","messageId":"93","endLine":9,"endColumn":9},{"ruleId":"90","severity":1,"message":"105","line":10,"column":3,"nodeType":"92","messageId":"93","endLine":10,"endColumn":11},{"ruleId":"90","severity":1,"message":"106","line":11,"column":3,"nodeType":"92","messageId":"93","endLine":11,"endColumn":7},{"ruleId":"90","severity":1,"message":"107","line":12,"column":3,"nodeType":"92","messageId":"93","endLine":12,"endColumn":9},{"ruleId":"90","severity":1,"message":"108","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"109","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"110","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":21},{"ruleId":"90","severity":1,"message":"111","line":8,"column":20,"nodeType":"92","messageId":"93","endLine":8,"endColumn":30},{"ruleId":"90","severity":1,"message":"112","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":11},{"ruleId":"90","severity":1,"message":"113","line":12,"column":13,"nodeType":"92","messageId":"93","endLine":12,"endColumn":17},{"ruleId":"90","severity":1,"message":"114","line":13,"column":13,"nodeType":"92","messageId":"93","endLine":13,"endColumn":18},{"ruleId":"90","severity":1,"message":"115","line":13,"column":20,"nodeType":"92","messageId":"93","endLine":13,"endColumn":28},{"ruleId":"94","replacedBy":"116"},{"ruleId":"96","replacedBy":"117"},{"ruleId":"90","severity":1,"message":"118","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"108","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"109","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"109","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"119","line":2,"column":31,"nodeType":"92","messageId":"93","endLine":2,"endColumn":40},{"ruleId":"90","severity":1,"message":"120","line":37,"column":9,"nodeType":"92","messageId":"93","endLine":37,"endColumn":21},{"ruleId":"90","severity":1,"message":"121","line":39,"column":9,"nodeType":"92","messageId":"93","endLine":39,"endColumn":26},{"ruleId":"90","severity":1,"message":"122","line":44,"column":9,"nodeType":"92","messageId":"93","endLine":44,"endColumn":25},{"ruleId":"90","severity":1,"message":"123","line":49,"column":11,"nodeType":"92","messageId":"93","endLine":49,"endColumn":26},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'Fragment' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Hidden' is defined but never used.","'NavLink' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'categories' is assigned a value but never used.","'API' is defined but never used.","'open' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.",["124"],["125"],"'React' is defined but never used.","'TextField' is defined but never used.","'isEditStatus' is assigned a value but never used.","'changeTaskHandler' is assigned a value but never used.","'updateTaskParams' is assigned a value but never used.","'editHandleEnter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]