[{"/home/alexandr/category/alexandr-testwork/src/index.js":"1","/home/alexandr/category/alexandr-testwork/src/redux/store.js":"2","/home/alexandr/category/alexandr-testwork/src/App.jsx":"3","/home/alexandr/category/alexandr-testwork/src/redux/reducers/reducer.js":"4","/home/alexandr/category/alexandr-testwork/src/utils/routes.js":"5","/home/alexandr/category/alexandr-testwork/src/AppNavbar.jsx":"6","/home/alexandr/category/alexandr-testwork/src/AppNavbar.styles.js":"7","/home/alexandr/category/alexandr-testwork/src/pages/CompletedTasks.jsx":"8","/home/alexandr/category/alexandr-testwork/src/pages/Main.jsx":"9","/home/alexandr/category/alexandr-testwork/src/pages/Settings.jsx":"10","/home/alexandr/category/alexandr-testwork/src/pages/CompletedTasks.styles.js":"11","/home/alexandr/category/alexandr-testwork/src/pages/Main.styles.js":"12","/home/alexandr/category/alexandr-testwork/src/pages/Settings.styles.js":"13","/home/alexandr/category/alexandr-testwork/src/redux/actions.js":"14","/home/alexandr/category/alexandr-testwork/src/redux/selectors/selectors.js":"15","/home/alexandr/category/alexandr-testwork/src/components/TaskList.jsx":"16","/home/alexandr/category/alexandr-testwork/src/components/Icon.jsx":"17","/home/alexandr/category/alexandr-testwork/src/components/CategoriesList.jsx":"18","/home/alexandr/category/alexandr-testwork/src/components/TaskInput.jsx":"19","/home/alexandr/category/alexandr-testwork/src/components/CategoryCreator.jsx":"20","/home/alexandr/category/alexandr-testwork/src/utils/colors.js":"21","/home/alexandr/category/alexandr-testwork/src/utils/icons.js":"22","/home/alexandr/category/alexandr-testwork/src/hooks/ListHook.js":"23","/home/alexandr/category/alexandr-testwork/src/components/TaskItem.jsx":"24","/home/alexandr/category/alexandr-testwork/src/components/Category.jsx":"25","/home/alexandr/category/alexandr-testwork/src/components/TaskButton.jsx":"26","/home/alexandr/category/alexandr-testwork/src/utils/navLinks.js":"27","/home/alexandr/category/alexandr-testwork/src/components/Categories.styles.js":"28","/home/alexandr/category/alexandr-testwork/src/components/TaskInput.styles.js":"29","/home/alexandr/category/alexandr-testwork/src/api/api.js":"30","/home/alexandr/category/alexandr-testwork/src/components/TaskItem.styles.js":"31"},{"size":296,"mtime":1621865892174,"results":"32","hashOfConfig":"33"},{"size":201,"mtime":1621579124843,"results":"34","hashOfConfig":"33"},{"size":452,"mtime":1621865160383,"results":"35","hashOfConfig":"33"},{"size":4578,"mtime":1621950487549,"results":"36","hashOfConfig":"33"},{"size":385,"mtime":1621932881803,"results":"37","hashOfConfig":"33"},{"size":518,"mtime":1621865456070,"results":"38","hashOfConfig":"33"},{"size":419,"mtime":1621865267232,"results":"39","hashOfConfig":"33"},{"size":1922,"mtime":1621865940879,"results":"40","hashOfConfig":"33"},{"size":3030,"mtime":1621864588414,"results":"41","hashOfConfig":"33"},{"size":3102,"mtime":1621945029524,"results":"42","hashOfConfig":"33"},{"size":243,"mtime":1621925762740,"results":"43","hashOfConfig":"33"},{"size":459,"mtime":1621925779136,"results":"44","hashOfConfig":"33"},{"size":1315,"mtime":1621925797712,"results":"45","hashOfConfig":"33"},{"size":3460,"mtime":1621949914239,"results":"46","hashOfConfig":"33"},{"size":593,"mtime":1621931288949,"results":"47","hashOfConfig":"33"},{"size":763,"mtime":1621865822250,"results":"48","hashOfConfig":"33"},{"size":352,"mtime":1621865666332,"results":"49","hashOfConfig":"33"},{"size":564,"mtime":1621943695813,"results":"50","hashOfConfig":"33"},{"size":2833,"mtime":1621943713473,"results":"51","hashOfConfig":"33"},{"size":4255,"mtime":1621949558044,"results":"52","hashOfConfig":"33"},{"size":75,"mtime":1621925885980,"results":"53","hashOfConfig":"33"},{"size":69,"mtime":1621925899300,"results":"54","hashOfConfig":"33"},{"size":766,"mtime":1621944585174,"results":"55","hashOfConfig":"33"},{"size":4034,"mtime":1621949483727,"results":"56","hashOfConfig":"33"},{"size":3159,"mtime":1621865631904,"results":"57","hashOfConfig":"33"},{"size":266,"mtime":1621865695205,"results":"58","hashOfConfig":"33"},{"size":187,"mtime":1621865379390,"results":"59","hashOfConfig":"33"},{"size":1137,"mtime":1621865592456,"results":"60","hashOfConfig":"33"},{"size":146,"mtime":1621865820614,"results":"61","hashOfConfig":"33"},{"size":1527,"mtime":1621948329171,"results":"62","hashOfConfig":"33"},{"size":825,"mtime":1621946683952,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ejqns2",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alexandr/category/alexandr-testwork/src/index.js",[],["131","132"],"/home/alexandr/category/alexandr-testwork/src/redux/store.js",[],"/home/alexandr/category/alexandr-testwork/src/App.jsx",[],"/home/alexandr/category/alexandr-testwork/src/redux/reducers/reducer.js",[],"/home/alexandr/category/alexandr-testwork/src/utils/routes.js",[],"/home/alexandr/category/alexandr-testwork/src/AppNavbar.jsx",[],"/home/alexandr/category/alexandr-testwork/src/AppNavbar.styles.js",[],"/home/alexandr/category/alexandr-testwork/src/pages/CompletedTasks.jsx",["133"],"import React, { useState } from 'react';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport { List } from './../components/TaskList';\nimport DateFnsUtils from '@date-io/moment';\nimport { useStyles } from './CompletedTasks.styles';\nimport { Paper, Grid } from '@material-ui/core';\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    margin: 'auto',\n    textAlign: 'center',\n    width: 500,\n  },\n};\n\nexport const CompletedTasks = () => {\n  const classes = useStyles();\n\n  const [selectedDateFrom, setSelectedDateFrom] = useState(\n    new Date('2021-01-01')\n  );\n\n  const [selectedDateTo, setSelectedDateTo] = useState(new Date('2021-10-31'));\n\n  const handleDateFromChange = (date) => {\n    setSelectedDateFrom(date);\n  };\n\n  const handleDateToChange = (date) => {\n    setSelectedDateTo(date);\n  };\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <div className={classes.CompletedDateFilter}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              margin=\"normal\"\n              format=\"yyyy-MM-dd\"\n              variant=\"inline\"\n              value={selectedDateFrom}\n              onChange={handleDateFromChange}\n              KeyboardButtonProps={{ 'aria-label': 'change date' }}\n            />\n          </MuiPickersUtilsProvider>\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              margin=\"normal\"\n              format=\"yyyy-MM-dd\"\n              variant=\"inline\"\n              value={selectedDateTo}\n              onChange={handleDateToChange}\n              KeyboardButtonProps={{ 'aria-label': 'change date' }}\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n      </Grid>\n\n      <Grid item xs={12} style={styles.Paper}>\n        <Grid container>\n          <List isListDone />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","/home/alexandr/category/alexandr-testwork/src/pages/Main.jsx",["134","135"],"import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport TaskInput from '../components/TaskInput';\nimport { List } from './../components/TaskList';\nimport { Paper, Grid } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/moment';\nimport { useStyles } from './Main.styles';\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    margin: 'auto',\n    textAlign: 'center',\n    width: 500,\n  },\n};\n\nexport const Main = () => {\n  const classes = useStyles();\n\n  const [taskDate, setTaskDate] = useState(new Date(Date.now()));\n  const [selectedDateFrom, setSelectedDateFrom] = useState(null);\n\n  const [selectedDateTo, setSelectedDateTo] = useState(null);\n\n  const [selectDateFrom, setSelectDateFrom] = useState(null);\n\n  const [selectDateTo, setSelectDateTo] = useState(null);\n\n  const handleDateFromChange = (date) => {\n    setSelectedDateFrom(date);\n  };\n\n  const handleDateToChange = (date) => {\n    setSelectedDateTo(date);\n  };\n\n  const setSelectDate = () => {\n    setSelectDateFrom(selectedDateFrom);\n    setSelectDateTo(selectedDateTo);\n  };\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <div className={classes.MainListDateFilter}>\n          <span className=\"AppText\">с</span>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              variant=\"inline\"\n              format=\"dd-MM-yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              value={selectedDateFrom}\n              onChange={handleDateFromChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n              /* style={{width: 180, marginBottom: \"20px\", marginRight: \"20px\"}} */\n              disableToolbar\n            />\n          </MuiPickersUtilsProvider>\n          <span className=\"AppText\">по</span>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              variant=\"inline\"\n              format=\"dd-MM-yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline2\"\n              value={selectedDateTo}\n              onChange={handleDateToChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n              /* style={{width: 180, marginBottom: \"20px\"}} */\n              disableToolbar\n            />\n          </MuiPickersUtilsProvider>\n\n          <Button variant=\"outlined\" onClick={setSelectDate}>\n            Filter\n          </Button>\n        </div>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper style={styles.Paper}>\n          <TaskInput />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} style={styles.Paper}>\n        <Grid container>\n          <List\n            isListDone={false}\n            selectedDateFrom={selectDateFrom}\n            selectedDateTo={selectDateTo}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","/home/alexandr/category/alexandr-testwork/src/pages/Settings.jsx",["136"],"/home/alexandr/category/alexandr-testwork/src/pages/CompletedTasks.styles.js",[],"/home/alexandr/category/alexandr-testwork/src/pages/Main.styles.js",[],"/home/alexandr/category/alexandr-testwork/src/pages/Settings.styles.js",[],"/home/alexandr/category/alexandr-testwork/src/redux/actions.js",[],"/home/alexandr/category/alexandr-testwork/src/redux/selectors/selectors.js",[],"/home/alexandr/category/alexandr-testwork/src/components/TaskList.jsx",["137"],"import React, { useEffect, useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport TaskItem from './TaskItem';\nimport ListHook from '../hooks/ListHook';\n\nexport const List = ({ isListDone }) => {\n  const { tasks, categories } = ListHook();\n  const [sortTasks, setSortTasks] = useState(tasks);\n\n  useEffect(() => {\n    setSortTasks(\n      tasks\n        .filter((task) => task.isDone === isListDone)\n        .sort((a) => (a.isFavorite ? -1 : 1))\n    );\n  }, [tasks]);\n\n  return (\n    <Grid container>\n      {sortTasks.map((task) => {\n        return (\n          <TaskItem\n            key={task.id}\n            task={task}\n            isListDone={isListDone}\n            categories={categories}\n          />\n        );\n      })}\n    </Grid>\n  );\n};\n","/home/alexandr/category/alexandr-testwork/src/components/Icon.jsx",[],"/home/alexandr/category/alexandr-testwork/src/components/CategoriesList.jsx",[],"/home/alexandr/category/alexandr-testwork/src/components/TaskInput.jsx",["138","139"],"/home/alexandr/category/alexandr-testwork/src/components/CategoryCreator.jsx",[],"/home/alexandr/category/alexandr-testwork/src/utils/colors.js",[],"/home/alexandr/category/alexandr-testwork/src/utils/icons.js",[],"/home/alexandr/category/alexandr-testwork/src/hooks/ListHook.js",["140","141"],"/home/alexandr/category/alexandr-testwork/src/components/TaskItem.jsx",["142","143"],"/home/alexandr/category/alexandr-testwork/src/components/Category.jsx",[],"/home/alexandr/category/alexandr-testwork/src/components/TaskButton.jsx",[],"/home/alexandr/category/alexandr-testwork/src/utils/navLinks.js",[],"/home/alexandr/category/alexandr-testwork/src/components/Categories.styles.js",["144","145"],"import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 340,\n      sm: 650,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n});\n\nexport const useStyles = makeStyles({\n  CategoryPageContainer: {\n    minHeight: '48px',\n    minWidth: '200px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    flexDirection: 'column',\n    [theme.breakpoints.up('xs')]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n  },\n  CategoryParams: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '300px',\n  },\n  CategoryTitle: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  categoryTitleWithEdit: {\n    display: 'flex',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      textDecoration: 'underline',\n    },\n  },\n  CategoryParamsName: {\n    marginLeft: '10px',\n  },\n  CategoryPageRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n","/home/alexandr/category/alexandr-testwork/src/components/TaskInput.styles.js",[],"/home/alexandr/category/alexandr-testwork/src/api/api.js",[],"/home/alexandr/category/alexandr-testwork/src/components/TaskItem.styles.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":9,"column":10,"nodeType":"152","messageId":"153","endLine":9,"endColumn":15},{"ruleId":"150","severity":1,"message":"154","line":25,"column":10,"nodeType":"152","messageId":"153","endLine":25,"endColumn":18},{"ruleId":"150","severity":1,"message":"155","line":25,"column":20,"nodeType":"152","messageId":"153","endLine":25,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":36,"column":6,"nodeType":"158","endLine":36,"endColumn":8,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":16,"column":6,"nodeType":"158","endLine":16,"endColumn":13,"suggestions":"161"},{"ruleId":"150","severity":1,"message":"155","line":24,"column":20,"nodeType":"152","messageId":"153","endLine":24,"endColumn":31},{"ruleId":"156","severity":1,"message":"162","line":29,"column":6,"nodeType":"158","endLine":29,"endColumn":8,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"164","line":8,"column":10,"nodeType":"152","messageId":"153","endLine":8,"endColumn":28},{"ruleId":"150","severity":1,"message":"165","line":8,"column":30,"nodeType":"152","messageId":"153","endLine":8,"endColumn":43},{"ruleId":"150","severity":1,"message":"166","line":30,"column":9,"nodeType":"152","messageId":"153","endLine":30,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":102,"column":38,"nodeType":"169","messageId":"170","endLine":102,"endColumn":40},{"ruleId":"150","severity":1,"message":"171","line":1,"column":22,"nodeType":"152","messageId":"153","endLine":1,"endColumn":32},{"ruleId":"150","severity":1,"message":"172","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'taskDate' is assigned a value but never used.","'setTaskDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["175"],"React Hook useEffect has a missing dependency: 'isListDone'. Either include it or remove the dependency array. If 'setSortTasks' needs the current value of 'isListDone', you can also switch to useReducer instead of useState and read 'isListDone' in the reducer.",["176"],"React Hook useEffect has a missing dependency: 'categoryID'. Either include it or remove the dependency array.",["177"],"'getDefaultCategory' is defined but never used.","'getCategories' is defined but never used.","'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'withStyles' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [isListDone, tasks]",{"range":"186","text":"187"},"Update the dependencies array to be: [categoryID]",{"range":"188","text":"189"},[1259,1261],"[dispatch]",[474,481],"[isListDone, tasks]",[1027,1029],"[categoryID]"]