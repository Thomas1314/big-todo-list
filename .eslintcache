[{"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\index.js":"1","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\App.js":"2","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\store.js":"3","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\List.js":"4","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\actions.js":"5","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\states.js":"6","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\types.js":"7","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\api\\api.js":"8","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TaskItem.js":"9","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TaskInput.js":"10","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\reducers\\reducer.js":"11"},{"size":348,"mtime":1620120396578,"results":"12","hashOfConfig":"13"},{"size":706,"mtime":1620664891882,"results":"14","hashOfConfig":"13"},{"size":200,"mtime":1620681833698,"results":"15","hashOfConfig":"13"},{"size":791,"mtime":1620664978111,"results":"16","hashOfConfig":"13"},{"size":560,"mtime":1620390760069,"results":"17","hashOfConfig":"13"},{"size":203,"mtime":1620120916884,"results":"18","hashOfConfig":"13"},{"size":223,"mtime":1620390573904,"results":"19","hashOfConfig":"13"},{"size":661,"mtime":1620681762097,"results":"20","hashOfConfig":"13"},{"size":1893,"mtime":1620664816819,"results":"21","hashOfConfig":"13"},{"size":1115,"mtime":1620681771406,"results":"22","hashOfConfig":"13"},{"size":643,"mtime":1620681860415,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1imla7n",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\index.js",[],["51","52"],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\App.js",["53"],"import React, { Fragment } from 'react';\nimport TaskInput from './components/TaskInput';\nimport List from './components/List';\nimport { Paper, Grid } from \"@material-ui/core\";\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    margin: \"auto\", \n    textAlign: \"center\",\n    width: 500\n  }\n};\n\nconst App = () => {\n\n  return (\n    <div>\n\n      <Grid container spacing={0}>\n          <Grid item xs={12}>\n            <Paper style={styles.Paper}>\n              <TaskInput />\n            </Paper>\n          </Grid>\n\n        <Grid item xs={12} style={styles.Paper}>\n          <Grid container>\n            <List />\n          </Grid>        \n        </Grid>\n      </Grid>\n\n    </div>\n    );\n}\n  \n export default App;\n","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\store.js",[],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\List.js",["54","55","56","57"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport TaskItem from \"../components/TaskInput\";\nimport { useSelector } from 'react-redux';\n\nconst List = ({ tasks, isListDone }) => {\n    const [todos, setTodos] = useState([]);\n\n    /* useEffect(() => {\n        axios.get('http://localhost:3000/tasks')\n        .then(res => {\n            //debugger;\n            const responeTodos = res.data;\n            setTodos(responeTodos); \n        })\n    }, []) */\n\n    //let todos = useSelector(state => state);\n    \n    debugger;\n    return (\n        <Grid container>\n            {tasks.map((task) => {\n                return <TaskItem key={task.id} task={task} isListDone={isListDone} />\n            })}\n        </Grid>\n    )\n}\n\n\nexport default List;\n\n\n\n","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\actions.js",["58","59"],"import { SET_TASKS, \n    ADD_TASK, \n    DELETE_TASK, \n    EDIT_TASK_TEXT,\n    TOGGLE_IS_FETCHING\n } from './types';\nimport API from '../api/api';\n\n\nexport const actions = {\n    setTasks: (tasks) => ({ type: SET_TASKS, tasks }),\n    toggleIsFetching: (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching }),\n    deleteTask: (id) => ({ type: DELETE_TASK, id })\n}\n\n\nexport const getTasks = (params) => async (dispatch) => {\n    dispatch(actions.toggleIsFetching(true));\n    const res = await API.getTasks(params);\n    dispatch(actions.setTasks(res));\n}\n\n\n\n\n\n\n\n","C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\states.js",[],["60","61"],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\types.js",[],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\api\\api.js",[],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TaskItem.js",["62","63","64","65","66"],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\components\\TaskInput.js",["67","68","69"],"C:\\Users\\alexa\\Desktop\\framework\\alexandr-testwork\\src\\redux\\reducers\\reducer.js",["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"80","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"81","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":21},{"ruleId":"76","severity":1,"message":"82","line":7,"column":12,"nodeType":"78","messageId":"79","endLine":7,"endColumn":17},{"ruleId":"76","severity":1,"message":"83","line":7,"column":19,"nodeType":"78","messageId":"79","endLine":7,"endColumn":27},{"ruleId":"76","severity":1,"message":"84","line":2,"column":5,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":4,"column":5,"nodeType":"78","messageId":"79","endLine":4,"endColumn":19},{"ruleId":"72","replacedBy":"86"},{"ruleId":"74","replacedBy":"87"},{"ruleId":"76","severity":1,"message":"81","line":6,"column":23,"nodeType":"78","messageId":"79","endLine":6,"endColumn":34},{"ruleId":"76","severity":1,"message":"88","line":7,"column":10,"nodeType":"78","messageId":"79","endLine":7,"endColumn":17},{"ruleId":"76","severity":1,"message":"89","line":7,"column":19,"nodeType":"78","messageId":"79","endLine":7,"endColumn":29},{"ruleId":"76","severity":1,"message":"90","line":29,"column":16,"nodeType":"78","messageId":"79","endLine":29,"endColumn":23},{"ruleId":"76","severity":1,"message":"91","line":31,"column":9,"nodeType":"78","messageId":"79","endLine":31,"endColumn":17},{"ruleId":"76","severity":1,"message":"92","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":17},{"ruleId":"76","severity":1,"message":"91","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":18},{"ruleId":"76","severity":1,"message":"82","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":15},{"ruleId":"76","severity":1,"message":"84","line":1,"column":21,"nodeType":"78","messageId":"79","endLine":1,"endColumn":29},{"ruleId":"76","severity":1,"message":"85","line":1,"column":44,"nodeType":"78","messageId":"79","endLine":1,"endColumn":58},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'todos' is assigned a value but never used.","'setTodos' is assigned a value but never used.","'ADD_TASK' is defined but never used.","'EDIT_TASK_TEXT' is defined but never used.",["93"],["94"],"'actions' is defined but never used.","'deleteTask' is defined but never used.","'setEdit' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'addTodo' is defined but never used.","no-global-assign","no-unsafe-negation"]